name: Padavan手动云编译

on:
  workflow_dispatch:
    inputs:
      production:
        description: 设置固件型号：
        default: "YK-L1"
        required: false
      cloneurl:
        description: 设置源码地址：
        default: "https://github.com/h8820/hadzhioglu-padavan-ng.git"
        required: false
      release:
        description: 是否发布到Release？
        default: 'yes'
        required: false

env:
  IMAGES: /opt/images
  RT_N56U: /opt/rt-n56u
  TRUNK: /opt/rt-n56u/trunk
  URL1: "https://github.com/h8820/manual-action-padavan"
  

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: 同步主存储库
      uses: actions/checkout@master
    - name: 初始环境设置
      run: |
        sudo apt update
        sudo apt upgrade
        sudo apt install autoconf autoconf-archive automake autopoint bison build-essential ca-certificates cmake cpio curl dos2unix doxygen fakeroot flex gawk gettext git gperf help2man htop kmod libarchive-tools libblkid-dev libc-ares-dev libcurl4-openssl-dev libdevmapper-dev libev-dev libevent-dev libexif-dev libflac-dev libgmp3-dev libid3tag0-dev libidn2-dev libjpeg-dev libkeyutils-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libogg-dev libsqlite3-dev libssl-dev libtool libtool-bin libudev-dev libunbound-dev libvorbis-dev libxml2-dev locales mc nano pkg-config ppp-dev python3 python3-docutils sshpass texinfo unzip uuid uuid-dev vim wget xxd zlib1g-dev 

    - name: 下载源码
      run: |
        echo "DATE=$(TZ='Asia/Shanghai' date '+%Y.%m.%d-%H%M')" >> $GITHUB_ENVzstd
        echo "NAME=Padavan- ${{ github.event.inputs.production }}" >> $GITHUB_ENV
        mkdir -p $IMAGES
        echo 开始编译时间： >> $IMAGES/readme.txt
        TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S' >> $IMAGES/readme.txt
        git clone --depth=1 ${{ github.event.inputs.cloneurl }} $RT_N56U > /dev/null
        cd $RT_N56U/toolchain
        wget https://gitlab.com/api/v4/projects/hadzhioglu%2Fpadavan-ng/packages/generic/toolchain/latest/toolchain.tzst
        tar -I zstd -xvf toolchain.tzst -C out
    - name: 自定义配置
      run: |
        cp -f ./defaults.h $TRUNK/user/shared
        cp -f ./versions.inc $TRUNK
        valtime="\\1 footer_code +='编译日期: ${{ env.DATE }} by <a href=\"$URL1\" target=\"blank\">WELN</a> \& <a href=\"$URL2\" target=\"blank\">恩山论坛</a> \& <a href=\"${{ github.event.inputs.cloneurl }}\" target=\"blank\">源代码</a><br>';"
        sed -i "s#\(.*Non-Commercial Use Only[^;]*;\).*#$valtime#" $TRUNK/user/www/n56u_ribbon_fixed/state.js
    - name: 开始编译
      run: |
        for m in ${{ github.event.inputs.production }}; do
          cp -f config/$m.config $TRUNK/configs/templates
          pushd $TRUNK
          echo "::group::开始编译 ${m}..."
          sudo ./clear_tree || echo
          sudo ./build_firmware.sh YK-L1.config
          ls -l images
          sudo mv -f images/*.trx $IMAGES
          echo "::endgroup::"
          popd
        done
    - name: 收集信息
      run: |
        cd $IMAGES
        echo 完成编译时间： >> readme.txt
        TZ='Asia/Shanghai'  date  '+%Y-%m-%d %H:%M:%S' >> readme.txt
        echo >> readme.txt
        echo 源码信息： >> readme.txt
        pushd $RT_N56U
        git ls-remote --get-url origin >> $IMAGES/readme.txt
        git log --shortstat >> $IMAGES/readme.txt
        popd
        echo >> readme.txt
        echo md5校验值： >> readme.txt
        for m in *.trx
        do
          mv -fv "$m" "${m%.*}_${{ env.DATE }}.trx"
        done
        md5sum *.trx >> readme.txt || echo
        ls -l
    - name: 上传固件到Artifacts
      if: true
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.NAME }}
        path: ${{ env.IMAGES }}
    - name: 发布固件到Release
      if: ${{ github.event.inputs.release == 'yes' }}
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ env.NAME }}
        tag_name: ${{ env.DATE }}
        body_path: ${{ env.IMAGES }}/readme.txt
        draft: false
        prerelease: false
        files: ${{ env.IMAGES }}/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
